@using System.Text.Json;
@using Basic.Models;
@using Microsoft.AspNetCore.Http
@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    if (Context.Session.GetString("Merchant") != null)
    {
        var merchantJson = Context.Session.GetString("Merchant");
        var merchant = JsonSerializer.Deserialize<Merchant>(merchantJson);
        ViewBag.Merchant = merchant;
    }
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.css" rel="stylesheet" />

<div class="tw-pt-16 tw-pb-20">
    @if (ViewBag.Merchant != null)
    {
        <div class="tw-p-4 tw-grid tw-auto-rows-[42px] tw-gap-5" style="grid-template-columns: repeat(12, minmax(0, 128px));">
            @* Header Merchant Section *@
            <div class="tw-col-span-5 tw-row-span-2"></div>
            <div class="tw-col-span-2 tw-row-span-2 tw-border tw-border-gray-400 tw-rounded-[16px] tw-bg-gray-100 tw-shadow-lg">
                <div class="tw-flex tw-flex-col tw-w-full tw-px-4 tw-pt-1 tw-truncate">
                    <span class="tw-font-bold tw-text-center tw-w-full tw-truncate">@ViewBag.Merchant.Name</span>
                    <span class="tw-text-center tw-w-full tw-truncate">@ViewBag.Merchant.StreetAddress</span>
                    <span class="tw-text-center tw-w-full tw-truncate">@ViewBag.Merchant.City</span>
                    <div class="tw-flex tw-w-full">
                        <span class="tw-text-center tw-w-1/2">@ViewBag.Merchant.State</span>
                        <span class="tw-text-center tw-w-1/2">@ViewBag.Merchant.Zip</span>
                    </div>
                </div>
            </div>
            <div class="tw-col-span-5 tw-row-span-2"></div>

            @* Sales Chart *@
            <div class="tw-col-span-6 tw-row-span-6 tw-border tw-border-gray-400 tw-rounded-[16px] tw-bg-white tw-shadow-lg">
                <div class="tw-font-bold tw-h-[60px] tw-w-full tw-border-b tw-flex">
                    <span class="tw-p-4 tw-w-[20%] tw-truncate">Sales</span>
                    <span class="tw-w-[57%]"></span>
                    <div class="tw-p-4 tw-w-[23%] tw-flex">
                        <div date-rangepicker class="tw-flex tw-items-center">
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="start" type="text" class="tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5 tw-cursor-pointer dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date start">
                            </div>
                            <span class="tw-mx-4 tw-text-gray-500">to</span>
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-tw-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="end" type="text" class="tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg tw-cursor-pointer focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5  dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date end">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tw-h-[calc(100%-60px)]">
                    <canvas class="tw-w-full tw-p-4" id="myChart"></canvas>
                </div>
            </div>
            @* Breakdown Chart *@
            <div class="tw-col-span-6 tw-row-span-6 tw-border tw-border-gray-400 tw-rounded-[16px] tw-bg-white tw-shadow-lg">
                <div class="tw-font-bold tw-h-[60px] tw-w-full tw-border-b tw-flex">
                    <span class="tw-p-4 tw-w-[20%] tw-truncate">Breakdown</span>
                    <span class="tw-w-[57%]"></span>
                    <div class="tw-p-4 tw-w-[23%] tw-flex">
                        <div date-rangepicker class="tw-flex tw-items-center">
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="start" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5 tw-cursor-pointer dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500">
                            </div>
                            <span class="tw-mx-4 tw-text-gray-500">to</span>
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-tw-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="end" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5 tw-cursor-pointer dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tw-h-[calc(100%-60px)]">
                    <canvas class="tw-w-full tw-p-4" id="myPie"></canvas>
                </div>
            </div>
            @* Recent Transactions Table *@
            <div class="tw-border tw-border-gray-400 tw-rounded-[16px] tw-shadow-lg tw-bg-white" style="grid-column: span 12/span 12; grid-row: span 10/span 10;">
                <div class="tw-font-bold tw-h-[60px] tw-w-full tw-border-b tw-flex">
                    <span class="tw-p-4 tw-w-[20%] tw-truncate">Recent Transactions</span>
                    <span class="tw-w-[57.5%]"></span>
                    <div class="tw-p-4 tw-w-[22.5%] tw-flex">
                        <a href="/" class="tw-text-sm tw-text-blue-400 tw-pr-4">Search Transactions</a>
                        <div date-rangepicker class="tw-flex tw-items-center">
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="start" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg tw-cursor-pointer focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5  dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date start">
                            </div>
                            <span class="tw-mx-4 tw-text-gray-500">to</span>
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-tw-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="end" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg tw-cursor-pointer focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5  dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date end">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tw-h-[calc(100%-60px)] tw-p-4" id="transactions-container">
                    @if (ViewBag.Merchant != null)
                    {
                        @await Html.PartialAsync("_TransactionTablePartial", new TransactionTableViewModel { Transactions = Model.Transactions, MerchantId = ViewBag.Merchant.Id })
                    }
                </div>
            </div>
            @* Card Payments Table *@
            <div class="tw-border tw-border-gray-400 tw-rounded-[16px] tw-shadow-lg tw-bg-white" style="grid-column: span 6/span 6; grid-row: span 10/span 10;">
                <div class="tw-font-bold tw-h-[60px] tw-w-full tw-border-b tw-flex">
                    <span class="tw-p-4 tw-w-[30%] tw-truncate">Card Payments</span>
                    <span class="tw-w-[23.5%]"></span>
                    <div class="tw-p-4 tw-w-[50.5%] tw-flex">
                        <a href="/" class="tw-text-sm tw-text-blue-400 tw-pr-4">Search Card Payments</a>
                        <div date-rangepicker class="tw-flex tw-items-center">
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="start" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg tw-cursor-pointer focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5  dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date start">
                            </div>
                            <span class="tw-mx-4 tw-text-gray-500">to</span>
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-tw-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="end" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg tw-cursor-pointer focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5  dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date end">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tw-h-[calc(100%-60px)] tw-p-4" id="card-payments-container">
                    @if (ViewBag.Merchant != null)
                    {
                        @await Html.PartialAsync("_CardPaymentTablePartial", new CardPaymentTableViewModel { CardPayments = Model.CardPayments, MerchantId = ViewBag.Merchant.Id })
                    }
                </div>
            </div>
            @* Invoices Table *@
            <div class="tw-border tw-border-gray-400 tw-rounded-[16px] tw-shadow-lg tw-bg-white" style="grid-column: span 6/span 6; grid-row: span 10/span 10;">
                <div class="tw-font-bold tw-h-[60px] tw-w-full tw-border-b tw-flex">
                    <span class="tw-p-4 tw-w-[30%] tw-truncate">Invoices</span>
                    <span class="tw-w-[38.5%]"></span>
                    <div class="tw-p-4 tw-w-[46.5%] tw-flex">
                        <a href="/" class="tw-text-sm tw-text-blue-400 tw-pr-4">Search Invoices</a>
                        <div date-rangepicker class="tw-flex tw-items-center">
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="start" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg tw-cursor-pointer focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5  dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date start">
                            </div>
                            <span class="tw-mx-4 tw-text-gray-500">to</span>
                            <div class="tw-relative">
                                <div class="tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pl-2 tw-pointer-events-none tw-cursor-pointer">
                                    <svg class="tw-w-tw-4 tw-h-4 tw-text-gray-500 dark:tw-text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                                    </svg>
                                </div>
                                <input name="end" type="text" class="date-input tw-bg-gray-50 tw-border tw-border-gray-300 tw-text-white tw-text-sm tw-rounded-lg tw-cursor-pointer focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-block tw-w-8 tw-pl-10 tw-p-2.5  dark:tw-bg-gray-700 dark:tw-border-gray-600 dark:tw-placeholder-gray-400 dark:tw-text-white dark:focus:tw-ring-blue-500 dark:focus:tw-border-blue-500" placeholder="      Select date end">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tw-h-[calc(100%-60px)] tw-p-4" id="invoices-container">
                    @if (ViewBag.Merchant != null)
                    {
                        @await Html.PartialAsync("_InvoiceTablePartial", new InvoiceTableViewModel { Invoices = Model.Invoices, MerchantId = ViewBag.Merchant.Id })
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div id="select-a-merchant" class="tw-font-bold tw-text-center tw-justify-center tw-w-full tw-height-full tw-h-[590px] tw-flex tw-flex-col">
            <span class="tw-text-2xl tw-pb-4">Select a merchant</span>
            <svg xmlns="http://www.w3.org/2000/svg" height="5em" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M320 0c-17.7 0-32 14.3-32 32s14.3 32 32 32h82.7L201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L448 109.3V192c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32H320zM80 32C35.8 32 0 67.8 0 112V432c0 44.2 35.8 80 80 80H400c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32V432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H192c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z" /></svg>
        </div>    
    }
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/datepicker.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const ctx = document.getElementById('myChart');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['10/09/2023', '10/10/2023', '10/11/2023', '10/12/2023', '10/13/2023', '10/14/2023', '10/15/2023', '10/16/2023'],
                datasets: [{
                    label: 'Sales',
                    data: [10000, 5000, 4000, 15000, 20000, 22000, 20000, 14000, 5000],
                    borderWidth: 1
                }]
            },
            options: {
                responsive:true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        const ctx2 = document.getElementById('myPie');

        new Chart(ctx2, {
            type: 'pie',
            data: {
                labels: ['Credit', 'Debit', 'Cash Discount'],
                datasets: [{
                    label: 'Amount Charged',
                    data: [23000,5000, 1500],
                    borderWidth: 1
                }]
            },
            options: {
                responsive:true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        $(document).ready(function () {
            if (document.querySelector('.page-link')) {
                $(document).on('click', '.page-link', function (e) {
                    e.preventDefault(); // Prevent default navigation

                    var container = $('#transactions-container'); // The container that wraps your partial

                    $.ajax({
                        url: this.href,  // The link's URL
                        method: 'GET',
                        success: function (data) {
                            container.html(data);  // Replace the container content with the new partial
                        },
                        error: function (error) {
                            console.error("Failed to fetch the new page", error);
                        }
                    });
                });
            }
        });

        $(document).ready(function () {
            if (document.querySelector('.card-payment-page-link')) {
                $(document).on('click', '.card-payment-page-link', function (e) {
                    e.preventDefault(); // Prevent default navigation

                    var container = $('#card-payments-container'); // The container that wraps your partial

                    $.ajax({
                        url: this.href,  // The link's URL
                        method: 'GET',
                        success: function (data) {
                            container.html(data);  // Replace the container content with the new partial
                        },
                        error: function (error) {
                            console.error("Failed to fetch the new page", error);
                        }
                    });
                });
            }
        });

        $(document).ready(function () {
            if (document.querySelector('.invoice-page-link')) {
                $(document).on('click', '.invoice-page-link', function (e) {
                    e.preventDefault(); // Prevent default navigation

                    var container = $('#invoices-container'); // The container that wraps your partial

                    $.ajax({
                        url: this.href,  // The link's URL
                        method: 'GET',
                        success: function (data) {
                            container.html(data);  // Replace the container content with the new partial
                        },
                        error: function (error) {
                            console.error("Failed to fetch the new page", error);
                        }
                    });
                });
            }
        });

        // Select the node that will be observed for mutations
        const targetNode = document.body;

        // Options for the observer (which mutations to observe)
        const config = { attributes: false, childList: true, subtree: true };

        // Callback function to execute when mutations are observed
        const callback = function (mutationsList, observer) {
            for (const mutation of mutationsList) {
                if (mutation.type === 'childList') {
                    mutation.addedNodes.forEach(node => {
                        if (node.classList && node.classList.contains('datepicker-dropdown')) { // Replace 'datepicker-class' with the actual class of your date picker
                            node.classList.remove('top-0');
                            observer.disconnect(); // Stop observing changes
                        }
                    });
                }
            }
        };

        // Create an observer instance linked to the callback function
        const observer = new MutationObserver(callback);

        // Start observing the target node for configured mutations
        observer.observe(targetNode, config);
    </script>
}